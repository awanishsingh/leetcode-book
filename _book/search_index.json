{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["&","[do","[do]","array","ask","binari","candidate:","case","categor","clean","clearifi","code","data","debug","dynam","edg","engin","enjoyed.","gitbook","graph","guess","hint","hope","implement","interview","introduct","later","leetcod","link","list","messi","need","not]","number","practice.","prepar","problem","program","promis","python.","question","search","softwar","strategi","structur","tag","test","trap","tree","write"],"binary-search.html":["\"\"\"","\"\"\"assert","\"\"\"convert","\"\"\"elimin","\"\"\"find","\"\"\"for","\"\"\"handl","\"\"\"keep","\"\"\"the","#","%","(self.find_kth_element(nums1,","*","**","+","/","0,","0.5","0:","1","1)","1))","1,","10","1:","1]","1]:","1d","2","2)","2d","2nd","3","3rd","5th","=","==",">","[0,","[1,","[search_first(nums,","alway","appli","array","array.","assert","assum","be","binari","binary_search(nums,","c","candidates.","column","column_length","compar","cow,","def","duplic","duplicates.","each","element","element.","elements,","elements.","elemin","elimin","elment","else:","exist","fals","find","find_kth_element(self,","find_median(nums1,","find_minimum(nums):","find_peak_element(nums):","first","first,","greater","handl","impli","increas","index","insert","intersect","is,","iteration,","k):","larger","last","len(matrix)","len(matrix),","len(matrix[0])","len(nums)","len(nums1)","len(nums2)","list","look","loop","matrix","matrix):","matrix[r][c]","median","mid","min(nums[first],","minimum","my_sqrt(self,","n)","name","need","next","nm)","num","num2,","number","nums1","nums1,","nums2):","nums2,","nums:","nums[first]","nums[last])","nums[last]:","nums[mid","nums[mid]","o(log","o(m","o(n)","o(n).","one.","order","order,","otherwise,","part.","peak","posit","positon","r","r,","rang","remov","result","return","rotat","row","row,","row_and_column_of(index,","run","search","search_first(nums,","search_in_rotated_sorted(nums,","search_insert_position(nums,","search_last(nums,","search_matrix(matrix,","search_range(nums,","self.find_kth_element(nums1,","side","side.","smaller","sort","sqrt(x)","square(x):","still","strictli","such","target","target),","target):","target)]","target:","templat","them.","time","time.","time:","total","true","two","until","updat","visual","worst","x","x):","x:","|nums1|","|nums2|"],"binary-tree.html":["!=","\"\"\"","\"\"\"a","\"\"\"bf","\"\"\"breadth","\"\"\"breath","\"\"\"depth","\"\"\"dfs.","\"\"\"each","#","(common_ancestor(child,","(none,","(root.left,","**","*depth*","*height*","+","+=","/","0","0.","1","1)","1:","1]","2)","2).","=","==",">","[]","[],","[root]","[root],","\\","abs(left_height","algorithm","ancestor","another.","awar","back","bad","balanc","becom","binari","call","case.","child","common","common_ancestor(root):","common_ancestor(root,","current","current.left","current.left:","current.right","current.right:","current:","def","depth","differ","each","edg","else:","exam","fals","first","height","height_or_unbalanced(root)","height_or_unbalanced(root):","height_or_unbalanced(root.left)","height_or_unbalanced(root.right)","implementation.","inord","inorder(root):","is_balanced_tree(root):","leaf","leaf,","leaf.","left","left,","left_height","left_max_valu","level","level,","level:","level])","level_order(root):","level_valu","level_values.append([node.v","longest","lowest","max(0,","max(left_height,","max(left_max_value,","max(max_depth(root.left),","max(max_path_value,","max_depth(root):","max_depth(root.right))","max_path_sum(root):","max_path_to_root(root)","max_path_to_root(root):","max_path_to_root(root.left))","max_path_to_root(root.right))","max_path_valu","maximum","min_depth(root):","minimum","need","next_level","next_level.append(node.left)","next_level.append(node.right)","node","node):","node.","node.left","node.left:","node.right:","node:","node_found_at","node_found_at(root,","node_found_at(root.left)","node_found_at(root.left,","node_found_at(root.right)","node_found_at(root.right,","none","number","o(n","o(n),","on","order","order.","p","p)","p,","parent","partent.","pass","path","peek","peek.right","postord","postorder(root):","preorder","preorder(root):","preserv","previou","previous:","q","q)","q):","return","revers","right","right_height","right_height)","right_max_valu","right_max_value)","root","root.right))","root.val","root:","search.","see","self.lowestcommonancestor(root.left,","self.lowestcommonancestor(root.right,","shouldn't","stack","stack,","stack.append(current)","stack.append(current.left)","stack.append(current.right)","stack.pop()","stack1","stack1.append(current.left)","stack1.append(current.right)","stack1.pop()","stack1:","stack2","stack2.append(current)","stack2:","stack:","stack[","start","subroutine.","subtre","subtree.","sum","time","time.","travers","tree","tree'","tree.","true","two","unbalanced,","upon.","us","valu","values.append(current.val)","values.append(peek.val)","values.append(stack2.pop().val)","visit","wast","won't"],"dynamic-programming.html":["\"\"\"","\"\"\"either","\"\"\"for","#","(1","(2","*","+","+=","...","0","0,","0:","1","1)","1))","1,","1:","1]","1])","1],","1]:","1][","1][j","1][j]","1][j])","2","2)","2:","2]","=","==",">","[0]","[1]","_","advanc","awar","balloon","best","break","burst","buy","climb","climbing_stair_ways(stairs):","coin","column","column):","common","continu","coordin","current","def","distanc","distinct","doubl","dynam","edit","elif","else:","enumerate(row):","enumerate(triangle):","f(","f(0)","f(1)","f(i","f(i)","first","game","hous","i,","increas","init","interleav","ith","j","j,","jump","len(obstacles),","len(obstacles[0])","len(row)","line","longest","max(f(i","max(not_robbed_last","max(not_robbed_last,","max(nums[0],","max_value(nums):","maximum","min(node[i","min(triangle[","min(triangle[i","min_path_total(triangle):","minimum","n","n):","node","node[i","node[i][j]","not_robbed_last,","num","num,","nums:","nums[0]","nums[1])","nums[i],","obstacl","obstacles[0]:","obstacles[0][j]","obstacles[i][j]","one_step_way","one_step_ways,","palindrom","partit","path","paths[","paths[i","paths[i][j","paths[i][j]","paths[j","paths[j]","program","range(1,","range(3,","range(column):","return","rob","robbed_last","robbed_last)","robbed_last,","robber","row","row):","row,","scrambl","sell","sequenc","stair","step","stock","stone","string","subarray","subsequ","sum","time","topic","triangl","triangle[","triangle[i","triangle[i][j]","two_step_way","two_step_ways,","uniqu","unique_paths(obstacles):","unique_paths(row,","value[i][j]","ways)","ways[1]","ways[2]","ways[i","ways[i]","word","x","y"]},"length":4},"tokenStore":{"root":{"0":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.02735562310030395}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.024793388429752067},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}}},".":{"5":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0182370820668693}}}},"1":{"0":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.049586776859504134},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0137221269296741},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.010330578512396695},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0121580547112462}}},"]":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.02127659574468085}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}},"[":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"j":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"2":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.010330578512396695},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}},"n":{"docs":{},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"3":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},"r":{"docs":{},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}},"5":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"docs":{},"&":{"docs":{"./":{"ref":"./","tf":0.03225806451612903}}},"[":{"0":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"1":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"docs":{},"d":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}},"]":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.02058319039451115}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.016129032258064516},"binary-search.html":{"ref":"binary-search.html","tf":0.014462809917355372}},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}},"s":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"u":{"docs":{},"m":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}},"l":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.03225806451612903},"binary-search.html":{"ref":"binary-search.html","tf":5.0041322314049586},"binary-tree.html":{"ref":"binary-tree.html","tf":5.0325900514579756}}},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"s":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}},"d":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"y":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"c":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}},"s":{"docs":{},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.03225806451612903}},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}},"l":{"docs":{},"l":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}}},"i":{"docs":{},"m":{"docs":{},"b":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.03225806451612903}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.014462809917355372},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.015197568389057751}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}}}}}}},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}}},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"i":{"docs":{},"n":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}}},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.022298456260720412},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.010291595197255575}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"e":{"docs":{},"b":{"docs":{},"u":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.03225806451612903}}}}},"f":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.03305785123966942},"binary-tree.html":{"ref":"binary-tree.html","tf":0.025728987993138937},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.015197568389057751}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0137221269296741}}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.016129032258064516},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":5.003039513677812}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},"e":{"docs":{},"d":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.016129032258064516},"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}},"i":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"j":{"docs":{},"o":{"docs":{},"y":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.010330578512396695}},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}},"i":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"f":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"a":{"docs":{},"m":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.03225806451612903}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}},"u":{"docs":{},"s":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"_":{"docs":{},"u":{"docs":{},"n":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}},"i":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10.016129032258064}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}},"h":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"s":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.03305785123966942}}}}},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.03225806451612903}}}}}}},"n":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}}},"docs":{}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}},"2":{"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.01652892561983471}}}}}}},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"docs":{}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}},"a":{"docs":{},"f":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"f":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.010291595197255575}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.008576329331046312}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705}}},"]":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"_":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}},"e":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.016129032258064516},"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"p":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}}}}},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}},")":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"[":{"docs":{},"r":{"docs":{},"]":{"docs":{},"[":{"docs":{},"c":{"docs":{},"]":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}}}}}}},"x":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"docs":{}}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}},"i":{"docs":{},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"[":{"docs":{},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"[":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017},"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"_":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}}},"n":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.016129032258064516},"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"x":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"]":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0274442538593482},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}}}}}}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},"_":{"docs":{},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}},"u":{"docs":{},"m":{"2":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.008264462809917356},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.016129032258064516},"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678},"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}},"s":{"1":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"2":{"docs":{},")":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.008264462809917356}}}},"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.01652892561983471},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},"[":{"0":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"1":{"docs":{},"]":{"docs":{},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"]":{"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},"]":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"m":{"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"p":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},"s":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.03225806451612903}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.03225806451612903},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":5.003039513677812}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}}},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"i":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"s":{"docs":{},"s":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}},"t":{"docs":{},"h":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0182370820668693}},"s":{"docs":{},"[":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},"j":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0121580547112462}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}},"e":{"docs":{},"k":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}},"o":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}}}}}}}}}},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.008576329331046312}}}},"q":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}}}},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705}}}}},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.03225806451612903},"binary-search.html":{"ref":"binary-search.html","tf":5.024793388429752}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.008576329331046312}}}}}}},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"e":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}},"r":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.014462809917355372}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}}}}},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"n":{"docs":{},"g":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"1":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"2":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.008576329331046312}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705}}}}}}}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},"[":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"r":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"i":{"docs":{},"r":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}},"e":{"docs":{},"p":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"n":{"docs":{},"e":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}},"u":{"docs":{},"c":{"docs":{},"h":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"e":{"docs":{},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}}}}}}},"m":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"l":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}},")":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.01652892561983471}}},"]":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}}},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.016129032258064516}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.018867924528301886}}}}}}},"e":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.016129032258064516},"binary-tree.html":{"ref":"binary-tree.html","tf":5.036020583190394}},"'":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"u":{"docs":{},"e":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}},"e":{"docs":{},"[":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.012396694214876033}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}},"w":{"docs":{},"o":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0121580547112462}},"s":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}}}}}}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.04838709677419355}}}}}},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"d":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"y":{"docs":{},"s":{"docs":{},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}},"[":{"1":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"2":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"docs":{},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}},"\"":{"docs":{},"\"":{"docs":{},"\"":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.02066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.018867924528301886},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.02127659574468085}},"a":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}}},"o":{"docs":{},"r":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}},"k":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"b":{"docs":{},"f":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"t":{"docs":{},"h":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}}}},"f":{"docs":{},"s":{"docs":{},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}},"#":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017},"binary-tree.html":{"ref":"binary-tree.html","tf":0.02058319039451115},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}},"%":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}},"(":{"1":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},"2":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}},"*":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"*":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"*":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"*":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}},"+":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.03305785123966942},"binary-tree.html":{"ref":"binary-tree.html","tf":0.008576329331046312},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.02127659574468085}},"=":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.015197568389057751}}}},"/":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.008264462809917356},"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}},"=":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.03925619834710744},"binary-tree.html":{"ref":"binary-tree.html","tf":0.06518010291595197},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.060790273556231005}},"=":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678},"binary-tree.html":{"ref":"binary-tree.html","tf":0.00686106346483705},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.030395136778115502}}}},">":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0182370820668693}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.010330578512396695}},"_":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"docs":{}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"_":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.03305785123966942},"binary-tree.html":{"ref":"binary-tree.html","tf":0.010291595197255575},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.02066115702479339}}}}}}},"(":{"0":{"docs":{},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"1":{"docs":{},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"i":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}},"k":{"docs":{},")":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"o":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}}}}},"m":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"n":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},")":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"n":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"e":{"docs":{},".":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"_":{"docs":{},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0121580547112462}},"s":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}}}}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"r":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.006198347107438017}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.004132231404958678}},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}}}},"3":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.0371900826446281},"binary-tree.html":{"ref":"binary-tree.html","tf":0.04974271012006861},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.030395136778115502}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.010330578512396695}}}}},"w":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.008264462809917356},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00911854103343465}},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},"_":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}},"o":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.030874785591766724}},".":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}},":":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.012006861063464836}}}}},"b":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},")":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}},"r":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}}}}}},"u":{"docs":{},"n":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.012006861063464836}},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}},"e":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}},"e":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"s":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}}},"i":{"docs":{},"t":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.025728987993138937}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.005145797598627788}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"k":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}}}}}}}}},"x":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.008264462809917356},"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}},")":{"docs":{},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},":":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"|":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"|":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"2":{"docs":{},"|":{"docs":{"binary-search.html":{"ref":"binary-search.html","tf":0.002066115702479339}}}},"docs":{}}}}}},"!":{"docs":{},"=":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.0017152658662092624}}}},"\\":{"docs":{"binary-tree.html":{"ref":"binary-tree.html","tf":0.003430531732418525}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}},"_":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0060790273556231}}},"j":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.0243161094224924}},",":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}}}},"y":{"docs":{"dynamic-programming.html":{"ref":"dynamic-programming.html","tf":0.00303951367781155}}}},"length":3030},"corpusTokens":["!=","\"\"\"","\"\"\"a","\"\"\"assert","\"\"\"bf","\"\"\"breadth","\"\"\"breath","\"\"\"convert","\"\"\"depth","\"\"\"dfs.","\"\"\"each","\"\"\"either","\"\"\"elimin","\"\"\"find","\"\"\"for","\"\"\"handl","\"\"\"keep","\"\"\"the","#","%","&","(1","(2","(common_ancestor(child,","(none,","(root.left,","(self.find_kth_element(nums1,","*","**","*depth*","*height*","+","+=","...","/","0","0,","0.","0.5","0:","1","1)","1))","1,","10","1:","1]","1])","1],","1]:","1][","1][j","1][j]","1][j])","1d","2","2)","2).","2:","2]","2d","2nd","3","3rd","5th","=","==",">","[0,","[0]","[1,","[1]","[]","[],","[do","[do]","[root]","[root],","[search_first(nums,","\\","_","abs(left_height","advanc","algorithm","alway","ancestor","another.","appli","array","array.","ask","assert","assum","awar","back","bad","balanc","balloon","be","becom","best","binari","binary_search(nums,","break","burst","buy","c","call","candidate:","candidates.","case","case.","categor","child","clean","clearifi","climb","climbing_stair_ways(stairs):","code","coin","column","column):","column_length","common","common_ancestor(root):","common_ancestor(root,","compar","continu","coordin","cow,","current","current.left","current.left:","current.right","current.right:","current:","data","debug","def","depth","differ","distanc","distinct","doubl","duplic","duplicates.","dynam","each","edg","edit","element","element.","elements,","elements.","elemin","elif","elimin","elment","else:","engin","enjoyed.","enumerate(row):","enumerate(triangle):","exam","exist","f(","f(0)","f(1)","f(i","f(i)","fals","find","find_kth_element(self,","find_median(nums1,","find_minimum(nums):","find_peak_element(nums):","first","first,","game","gitbook","graph","greater","guess","handl","height","height_or_unbalanced(root)","height_or_unbalanced(root):","height_or_unbalanced(root.left)","height_or_unbalanced(root.right)","hint","hope","hous","i,","implement","implementation.","impli","increas","index","init","inord","inorder(root):","insert","interleav","intersect","interview","introduct","is,","is_balanced_tree(root):","iteration,","ith","j","j,","jump","k):","larger","last","later","leaf","leaf,","leaf.","leetcod","left","left,","left_height","left_max_valu","len(matrix)","len(matrix),","len(matrix[0])","len(nums)","len(nums1)","len(nums2)","len(obstacles),","len(obstacles[0])","len(row)","level","level,","level:","level])","level_order(root):","level_valu","level_values.append([node.v","line","link","list","longest","look","loop","lowest","matrix","matrix):","matrix[r][c]","max(0,","max(f(i","max(left_height,","max(left_max_value,","max(max_depth(root.left),","max(max_path_value,","max(not_robbed_last","max(not_robbed_last,","max(nums[0],","max_depth(root):","max_depth(root.right))","max_path_sum(root):","max_path_to_root(root)","max_path_to_root(root):","max_path_to_root(root.left))","max_path_to_root(root.right))","max_path_valu","max_value(nums):","maximum","median","messi","mid","min(node[i","min(nums[first],","min(triangle[","min(triangle[i","min_depth(root):","min_path_total(triangle):","minimum","my_sqrt(self,","n","n)","n):","name","need","next","next_level","next_level.append(node.left)","next_level.append(node.right)","nm)","node","node):","node.","node.left","node.left:","node.right:","node:","node[i","node[i][j]","node_found_at","node_found_at(root,","node_found_at(root.left)","node_found_at(root.left,","node_found_at(root.right)","node_found_at(root.right,","none","not]","not_robbed_last,","num","num,","num2,","number","nums1","nums1,","nums2):","nums2,","nums:","nums[0]","nums[1])","nums[first]","nums[i],","nums[last])","nums[last]:","nums[mid","nums[mid]","o(log","o(m","o(n","o(n)","o(n),","o(n).","obstacl","obstacles[0]:","obstacles[0][j]","obstacles[i][j]","on","one.","one_step_way","one_step_ways,","order","order,","order.","otherwise,","p","p)","p,","palindrom","parent","part.","partent.","partit","pass","path","paths[","paths[i","paths[i][j","paths[i][j]","paths[j","paths[j]","peak","peek","peek.right","posit","positon","postord","postorder(root):","practice.","preorder","preorder(root):","prepar","preserv","previou","previous:","problem","program","promis","python.","q","q)","q):","question","r","r,","rang","range(1,","range(3,","range(column):","remov","result","return","revers","right","right_height","right_height)","right_max_valu","right_max_value)","rob","robbed_last","robbed_last)","robbed_last,","robber","root","root.right))","root.val","root:","rotat","row","row):","row,","row_and_column_of(index,","run","scrambl","search","search.","search_first(nums,","search_in_rotated_sorted(nums,","search_insert_position(nums,","search_last(nums,","search_matrix(matrix,","search_range(nums,","see","self.find_kth_element(nums1,","self.lowestcommonancestor(root.left,","self.lowestcommonancestor(root.right,","sell","sequenc","shouldn't","side","side.","smaller","softwar","sort","sqrt(x)","square(x):","stack","stack,","stack.append(current)","stack.append(current.left)","stack.append(current.right)","stack.pop()","stack1","stack1.append(current.left)","stack1.append(current.right)","stack1.pop()","stack1:","stack2","stack2.append(current)","stack2:","stack:","stack[","stair","start","step","still","stock","stone","strategi","strictli","string","structur","subarray","subroutine.","subsequ","subtre","subtree.","such","sum","tag","target","target),","target):","target)]","target:","templat","test","them.","time","time.","time:","topic","total","trap","travers","tree","tree'","tree.","triangl","triangle[","triangle[i","triangle[i][j]","true","two","two_step_way","two_step_ways,","unbalanced,","uniqu","unique_paths(obstacles):","unique_paths(row,","until","updat","upon.","us","valu","value[i][j]","values.append(current.val)","values.append(peek.val)","values.append(stack2.pop().val)","visit","visual","wast","ways)","ways[1]","ways[2]","ways[i","ways[i]","won't","word","worst","write","x","x):","x:","y","|nums1|","|nums2|"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction\nA GitBook for preparing programming interviews\nHint for a promising software engineer candidate:\n[Do]\n\nClearify the problem\nWrite clean code\nWrite test cases\nDebug with strategy\n\n[Do not]\n\nAsk question later\nWrite messy code\nTrap by edge cases\nDebug with guess\n\nThis needs practice.\nThis GitBook categorizes LeetCode problems with my implementation in Python.\nHope you enjoyed.\nLeetCode Tags\n\nBinary Search\nBinary Tree\nDynamic Programming\nLinked List\nArray & Numbers\nData Structure\nGraph & Search\n\n"},"binary-search.html":{"url":"binary-search.html","title":"Binary Search","keywords":"","body":"Binary Search\n\nTemplate\nSearch in rotated sorted array\nSearch insert position\nSearch range\nSqrt(x)\nSearch a 2D Matrix\nFind Peak Element\nFind Minimum in Rotated Sorted Array\nMedian of Two Sorted Arrays\n\n\nTemplate\ndef binary_search(nums, target):\n    \"\"\"Find the first or last positon of the target in the number list\n    \"\"\"\n    if not nums:\n        return -1\n\n    # Name first and last to imply that they are candidates.\n    first, last = 0, len(nums) - 1\n\n    # Loop until the first and last nums intersect or being side by side.\n    while first + 1 \n\nSearch in rotated sorted array\nAssume there is no duplicates in the array.\ndef search_in_rotated_sorted(nums, target):\n    \"\"\"Assert the search result in the ordered side\n    O(log n)\n    \"\"\"\n    if not nums:\n        return -1\n\n    first, last = 0, len(nums) - 1\n    while first + 1 \nOtherwise, we have to handle the duplicates.\ndef search_in_rotated_sorted(nums, target):\n    if not nums:\n        return False\n\n    first, last = 0, len(nums) - 1\n    while first + 1 \n\nSearch insert position\ndef search_insert_position(nums, target):\n    if not nums:\n        return -1\n\n    first, last = 0, len(nums) - 1\n    while first + 1 \n\nSearch range\ndef search_range(nums, target):\n    return [search_first(nums, target), search_last(nums, target)]\n\ndef search_first(nums, target):\n    \"\"\"Keep update last to find the first target\n    \"\"\"\n    if not nums:\n        return -1\n\n    first, last = 0, len(nums) - 1\n    while first + 1 \n\nSqrt(x)\ndef my_sqrt(self, x):\n    \"\"\"Find a number r such that r ** 2  x\n    \"\"\"\n\n    def square(x):\n        return x * x\n\n    first, last = 0, x\n    while first + 1  x:\n        return first\n    return last\n\n\nSearch a 2D Matrix\nIf the elements of the matrix are strictly increasing in order, we can apply binary search to them.\ndef search_matrix(matrix, target):\n    \"\"\"Convert row and column to 1D index and search\n    Time: O(log nm)\n    \"\"\"\n    def row_and_column_of(index, matrix):\n        column_length = len(matrix[0])\n        row = index / column_length\n        column = index % column_length\n        return row, column\n\n    first, last = 0, len(matrix) * len(matrix[0]) - 1\n    while first + 1 \nOtherwise, we still can eliminate a row or column each time.\ndef search_matrix(matrix, target):\n    \"\"\"Eliminate a row or column each time\n    Time: O(m + n)\n    \"\"\"\n    cow, column = len(matrix), len(matrix[0])\n\n    r, c = 0, column - 1\n    while r = 0:\n        if matrix[r][c] == target:\n            return True\n\n        if matrix[r][c] \n\nFind Peak Element\ndef find_peak_element(nums):\n    \"\"\"The peak is always on the greater side \n    \"\"\"\n    if not nums:\n        return nums\n\n    first, last = 0, len(nums) - 1\n    while first + 1  nums[mid + 1]:\n            return mid\n\n        if nums[mid] \n\nFind Minimum in Rotated Sorted Array\nAssume no duplicates existed in the array.\ndef find_minimum(nums):\n    \"\"\"Find the minimum by visualizing the rotated sorted array\n    \"\"\"\n    if not nums:\n        return nums\n\n    first, last = 0, len(nums) - 1\n    while first + 1  nums[last]:\n        if nums[first]  nums[last]:\n            first = mid\n        else:\n            last = mid\n\n    return min(nums[first], nums[last])\n\nOtherwise, we need to handle it and the worst running time would be O(n).\ndef find_minimum(nums):\n    \"\"\"Handle the duplicates\n    Time: O(n)\n        [0, 1, 1, 1, 1]\n        [1, 1, 1, 0, 1]\n    \"\"\"\n    if not nums:\n        return nums\n\n    first, last = 0, len(nums) - 1\n    while first + 1 \n\nMedian of Two Sorted Arrays\ndef find_median(nums1, nums2):\n    \"\"\"For a total 10 elements, median is the 5th one. We compare the 2nd\n    element at nums1 and the 3rd element at num2, and eleminate the smaller\n    part. That is, we will remove either 2 elments or 3 elements.\n\n    In the next iteration, we look for either the 3rd or 2nd larger element.\n    \"\"\"\n    total = len(nums1) + len(nums2)\n    if total % 2 == 1:\n        return self.find_kth_element(nums1, nums2, total / 2 + 1)\n    return 0.5 * (self.find_kth_element(nums1, nums2, total / 2) +\n                  self.find_kth_element(nums1, nums2, total / 2 + 1))\n\ndef find_kth_element(self, nums1, nums2, k):\n    # Assert |nums1| > |nums2|\n    if len(nums1) \n"},"binary-tree.html":{"url":"binary-tree.html","title":"Binary Tree","keywords":"","body":"Binary Tree\n\nBinary Tree Preorder Traversal\nBinary Tree Inorder Traversal\nBinary Tree Postorder Traversal\nBinary Tree Level Order Traversal\nMaximum Depth of Binary Tree\nMinimum Depth of Binary Tree\nBalanced Binary Tree\nBinary Tree Maximum Path Sum\nLowest Common Ancestor of a Binary Tree\n\n\nBinary Tree Preorder Traversal\ndef preorder(root):\n    \"\"\"Depth-first search.\n\n    Get the node value when we see the node in the first time.\n    \"\"\"\n    values = []\n\n    stack, current = [], root\n    while stack or current:\n        if current:\n            values.append(current.val)\n            stack.append(current)\n            current = current.left\n        else:\n            current = stack.pop()\n            current = current.right\n\n    return values\n\ndef preorder(root):\n    \"\"\"Breath-first search.\n    \"\"\"\n    values = []\n\n    if not root:\n        return []\n\n    stack = [root]\n    while stack:\n        current = stack.pop()\n        values.append(current.val)\n        if current.right:\n            stack.append(current.right)\n        if current.left:\n            stack.append(current.left)\n\n    return values\n\n\nBinary Tree Inorder Traversal\ndef inorder(root):\n    \"\"\"Depth-first search.\n\n    Get the node value when we traverse back from the left subtree.\n    \"\"\"\n    values = []\n\n    stack, current = [], root\n    while stack or current:\n        if current:\n            stack.append(current)\n            current = current.left\n        else:\n            current = stack.pop()\n            values.append(current.val)\n            current = current.right\n\n    return values\n\n\nBinary Tree Postorder Traversal\ndef postorder(root):\n    \"\"\"Depth-first search.\n\n    Get the node value when we traverse back from the right subtree.\n    \"\"\"\n    values = []\n\n    previous = None\n    stack, current = [], root\n    while stack or current:\n        if current:\n            stack.append(current)\n            current = current.left\n        else:\n            # Need to preserve the node when we traverse the right subtree.\n            peek = stack[-1]\n            if not peek.right or peek.right == previous:\n                values.append(peek.val)\n                previous = stack.pop()\n            else:\n                current = peek.right\n    return values\n\ndef postorder(root):\n    \"\"\"Breadth-first search.\n\n    Use two stacks to reverse the visit order.\n    \"\"\"\n    values = []\n\n    stack2 = []\n\n    stack1 = [root] if root else []  # Aware edge case.\n    while stack1:\n        current = stack1.pop()\n        stack2.append(current)\n\n        if current.left:\n            stack1.append(current.left)\n        if current.right:\n            stack1.append(current.right)\n\n    while stack2:\n        values.append(stack2.pop().val)\n\n    return values\n\n\nBinary Tree Level Order Traversal\ndef level_order(root):\n    level_values = []\n\n    level = [root] if root else []\n    while level:\n        level_values.append([node.val for node in level])\n\n        next_level = []\n        for node in level:\n            if node.left:\n                next_level.append(node.left)\n            if node.right:\n                next_level.append(node.right)\n        level = next_level\n\n    return level_values\n\n\nMaximum Depth of Binary Tree\ndef max_depth(root):\n    \"\"\"DFS.\n\n    The *depth* of a node is the number of edges from the node to the tree's root node. A root node will have a depth of 0.\n\n    The *height* of a node is the number of edges on the longest path from the node to a leaf. A leaf node will have a height of 0.\n    \"\"\"\n\n    if not root:\n        return 0\n    return 1 + max(max_depth(root.left), max_depth(root.right))\n\nMinimum Depth of Binary Tree\ndef min_depth(root):\n    \"\"\"BFS\n    \"\"\"\n\n    if not root:\n        return 0\n\n    level, depth = [root], 1\n    while level:\n\n        next_level = []\n        for node in level:\n            if not node.left and not node.right:\n                return depth\n\n            if node.left:\n                next_level.append(node.left)\n            if node.right:\n                next_level.append(node.right)\n\n        depth += 1\n        level = next_level\n\n\nBalanced Binary Tree\ndef is_balanced_tree(root):\n    def height_or_unbalanced(root):\n        \"\"\"DFS.\n\n        Either left or right tree is unbalanced, then we\n        shouldn't waste time on calling the subroutine.\n        \"\"\"\n        if not root:\n          return 0\n\n        left_height = height_or_unbalanced(root.left)\n        if left_height == -1:\n            return -1\n\n        right_height = height_or_unbalanced(root.right)\n        if right_height == -1:\n            return -1\n\n        if abs(left_height - right_height) > 1:\n            return -1\n\n        return 1 + max(left_height, right_height)\n\n    return height_or_unbalanced(root) != -1\n\n\nBinary Tree Maximum Path Sum\ndef max_path_sum(root):\n    \"\"\"Each path in this tree is either \n\n    1) starting from a root to a leaf, or \n    2) across a root from one subtree to another. \n\n    We exam each node as a root in this tree.\n    \"\"\"\n\n    def max_path_to_root(root):\n        if not root:\n            return 0\n\n        left_max_value = max(0, max_path_to_root(root.left))\n        right_max_value = max(0, max_path_to_root(root.right))\n\n        # The value won't pass upon.\n        #      root\n        #    /      \\\n        # left      right\n        max_path_value = max(max_path_value,\n                             left_max_value + root.val + right_max_value)\n\n        # The value can be passed to its partent.\n        # parent\n        #       \\\n        #      root\n        #    /\n        # left\n        return root.val + max(left_max_value, right_max_value)\n\n    max_path_value = None\n    max_path_to_root(root)\n    return max_path_value\n\n\nLowest Common Ancestor of a Binary Tree\ndef common_ancestor(root, p, q):\n    \"\"\"A common ancestor is a node that have p and q in different subtree.\n    \"\"\"\n\n    if root in (None, p, q):\n        return root\n\n    left, right = (common_ancestor(child, p, q)\n                   for child in (root.left, root.right))\n\n    return root if left and right else left or right\n\ndef common_ancestor(root):\n    \"\"\"A bad implementation.\n\n    Calling node_found_at is O(n), we call it for every node. \n    The algorithm becomes O(n ** 2).\n    \"\"\"\n\n    def node_found_at(root, node):\n        if not root:\n            return False\n\n        if root == node:\n            return True\n\n        return node_found_at(root.left) or node_found_at(root.right)\n\n    if not root:\n        return root\n\n    if node_found_at(root.left, p) and node_found_at(root.left, q):\n        return self.lowestCommonAncestor(root.left, p, q)\n\n    if node_found_at(root.right, p) and node_found_at(root.right, q):\n        return self.lowestCommonAncestor(root.right, p, q)\n\n    return root\n\n"},"dynamic-programming.html":{"url":"dynamic-programming.html","title":"Dynamic Programming","keywords":"","body":"Dynamic Programming\n\nCoordinates\nTriangle\nUnique Paths\nClimbing Stairs\nHouse Robber\nMinimum Path Sum\nJump Game\nLongest Increasing Subsequence\n\n\nSequence\nWord Break\nPalindrome Partitioning\n\n\nDouble Sequence\nLongest Common Subsequence\nEdit Distance\nDistinct Subsequence\nInterleaving String\n\n\nAdvance Topics\nBest Time to Buy and Sell Stock\nMaximum Subarray\nCoin in A Line\nStone Game\nBurst Balloons\nScramble String\n\n\n\n\nCoordinates\nTriangle\ndef min_path_total(triangle):\n    \"\"\"For i > 0, j > 0:\n        node[i][j] = value[i][j] + min(node[i - 1][j - 1], node[i - 1][j])\n    \"\"\"\n    if not triangle or not triangle[-1]:\n        return 0\n\n    for i, row in enumerate(triangle):\n        for j, node in enumerate(row):\n            if i == 0 and j == 0:\n                continue\n\n            if j == 0:\n                triangle[i][j] += triangle[i - 1][j]\n            elif j == len(row) - 1:\n                triangle[i][j] += triangle[i - 1][-1]\n            else:\n                triangle[i][j] += min(triangle[i - 1][j - 1], triangle[i - 1][j])\n\n    return min(triangle[-1])\n\n\nUnique Paths\ndef unique_paths(row, column):\n    \"\"\"For x > 0, y > 0:\n        paths[i][j] = paths[i - 1][j] + paths[i][j - 1]\n    \"\"\"\n    if row == 0 or column == 0:\n        return 0\n\n    paths = [1] * column\n\n    for _ in range(1, row):\n        for j in range(1, column):\n            paths[j] += paths[j - 1]\n\n    return paths[-1]\n\ndef unique_paths(obstacles):\n    \"\"\"\n    \"\"\"\n    if not obstacles or not obstacles[0]:\n        return 0\n\n    row, column = len(obstacles), len(obstacles[0])\n\n    # Initalize the first row paths\n    paths = [0] * column\n    for j in range(column):\n        if obstacles[0][j] == 1:\n            break\n        paths[j] = 1\n\n\n    for i in range(1, row):\n        for j in range(column):\n            if obstacles[i][j] == 1:\n                paths[j] = 0\n            # Aware the first column\n            elif j > 0:\n                paths[j] += paths[j - 1]\n\n    return paths[-1]\n\n\nClimbing Stairs\ndef climbing_stair_ways(stairs):\n    \"\"\"\n    ways[1] = 1\n    ways[2] = 2\n    For i > 2:\n        ways[i] = ways[i - 1] + ways[i - 2]\n                  (2-step-ways) (1-steps-ways)\n    \"\"\"\n    one_step_ways, two_step_ways = 1, 2\n\n    for _ in range(3, n):\n        two_step_ways, one_step_ways = one_step_ways + two_step_ways, two_step_ways\n\n    if n == 1:\n        return one_step_ways\n    if n == 2:\n        return two_step_ways\n    return one_step_ways + two_step_ways\n\n\nHouse Robber\ndef max_value(nums):\n    \"\"\"Either rob ith house or not\n        f(-2) = 0\n        f(-1) = 0\n        f(0)  = nums[0]\n        f(1)  = max(nums[0], nums[1])\n        ...\n        f(i)  = max(f(i - 2) + nums[i], f(i - 1))\n    \"\"\"\n    not_robbed_last, robbed_last = 0, 0\n\n    for num in nums:\n        current = max(not_robbed_last + num, robbed_last)\n        not_robbed_last, robbed_last = robbed_last, current\n\n    return max(not_robbed_last, robbed_last)\n\n"}}}